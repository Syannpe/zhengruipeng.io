let JSONParseCustomController=class extends Object{props;node=null;constructor(node,props={}){super();this.node=node;this.props=props}render(){for(let name in this.props){this.node[name]=this.props[name]}if(!this.node.querySelector(".provider")){if(this.node.querySelector("input")){this.node.querySelector("input").classList="provider"}else if(this.node.querySelector("select")){this.node.querySelector("select").classList="provider"}else if(this.node.querySelector("textarea")){this.node.querySelector("textarea").classList="provider"}else{this.node.classList="provider"}}return this.node}};let JSONParseRangeController=class extends JSONParseCustomController{min=0;max=5;step=1;constructor(min,max,step,props={}){super(null,props);this.min=min;this.max=max;this.step=step}render(){let div=document.createElement("div");div.innerHTML=`<label>${this.min}<input type="range"class="provider"min="${this.min}"max="${this.max}"step="${this.step}"value="${this.min}"/>${this.max}</label>`;this.node=div.children[0];return super.render()}};let JSONParseDateController=class extends JSONParseCustomController{constructor(props={}){super(null,props)}render(){let div=document.createElement("div");div.innerHTML=`<label><input type="date"class="provider"/></label>`;this.node=div.children[0];return super.render()}};let JSONParseTimeController=class extends JSONParseCustomController{constructor(props={}){super(null,props)}render(){let div=document.createElement("div");div.innerHTML=`<label><input type="time"class="provider"/></label>`;this.node=div.children[0];return super.render()}};let JSONParserEvent=class extends Event{key;value;json;jsonParser;cancelBubble=false;constructor({key,value,json,jsonParser}){super("jsonchange");this.key=key;this.value=value;this.json=json;this.jsonParser=jsonParser}};JSONParserEvent.prototype.stopPropagation=function(){this.cancelBubble=true};let stringToPrimary=function(str){let temp=Number.isNaN(str-0)?str:str-0;(temp==="true"||temp==="false")&&(temp=(temp==="true"));return temp};let defaultInputEvent=function(ev,that){let temp=stringToPrimary(this.value??this.getAttribute("value"));const keyName=this.name??this.getAttribute("name");that.json[keyName]=temp;const event=new JSONParserEvent({json:that.json,value:temp,key:keyName,jsonParser:that,isTrusted:true});that.onJsonChange&&that.onJsonChange(event);that.dispatchEvent(event)};let JSONParser=class extends EventTarget{tableContainer=null;json={};valueToKey=new Map();cellToKey=new Map();children=[];parent=null;constructor(json){super();this.json=json};initTable(){let container=document.createElement("section");container.className="table-container";this.tableContainer=container;container.innerHTML=`<table><thead><tr><th>key</th><th>value</th></tr></thead><tbody></tbody></table>`;const tbody=container.querySelector("tbody");for(let name in this.json){this.valueToKey.set(this.json[name],name);let tr=document.createElement("tr");let tdName=document.createElement("td");tdName.innerHTML=`<input type='checkbox'id='${name}-using'checked>`;tdName.innerHTML+=name;this.cellToKey.set(tdName,name);let tdValue=document.createElement("td");if(this.json[name]instanceof JSONParseCustomController){let customNode=this.json[name];tdValue.appendChild(customNode.render());let that=this;let provider=tdValue.querySelector('.provider')||tdValue.children[0];provider.name=name;provider.addEventListener("input",function(ev){defaultInputEvent.call(this,ev,that)})}else if(this.json[name]instanceof Array){tdValue.innerHTML=`<select name="${name}"class="json-input"id="jsonparse-${name}">${(function(data){let res="";data.forEach(val=>{res+="<option>"+val+"</option>"});return res})(this.json[name])}</select>`;let that=this;tdValue.children[0].addEventListener("input",function(ev){defaultInputEvent.call(this,ev,that)})}else if(this.json[name]instanceof Object){const jsonParser=new JSONParser(this.json[name]);tdValue.appendChild(jsonParser.initTable());jsonParser.parent=this;let that=this;let customJsonChangeEventSymbol=Symbol.for['customJsonChangeEvent'];Object.defineProperty(jsonParser,"onJsonChange",{set:function(func){jsonParser[customJsonChangeEventSymbol]=func},get:_=>{let defaultBubbleEvent=function(ev){let that2=this;if(!ev.cancelBubble&&this===ev.jsonParser)that.jsonChange(new JSONParserEvent({json:that2.parent.json,key:name,value:ev.json,jsonParser:that}))}.bind(jsonParser);return function(ev){jsonParser[customJsonChangeEventSymbol]?jsonParser[customJsonChangeEventSymbol](ev):null;defaultBubbleEvent(ev)}},configurable:true,enumerable:true});this.children.push(jsonParser)}else{let temp=stringToPrimary(this.json[name]);if(typeof this.json[name]==="number"){tdValue.innerHTML=`<input type="number"value="${this.json[name]}"name="${name}"class="json-input"id="jsonparse-${name}"/>`}else if(typeof this.json[name]==="boolean"){tdValue.innerHTML=`<label name="${name}"><input type="checkbox"value="${this.json[name]}"name="${name}"class="json-input provider"id="jsonparse-${name}"/><span>${this.json[name]}</span></label>`;let label=tdValue.children[0];let checkbox=tdValue.children[0].querySelector("input");let display=tdValue.children[0].querySelector("span");if(this.json[name])checkbox.checked=true;checkbox.addEventListener("input",function(){this.value=this.checked;label.setAttribute("value",this.checked);display.innerText=this.checked})}else if(typeof this.json[name]==="string"){tdValue.innerHTML=`<input type="text"value="${this.json[name]}"name="${name}"class="json-input"id="jsonparse-${name}"/>`}let that=this;tdValue.children[0].addEventListener("input",function(ev){defaultInputEvent.call(this,ev,that)})}this.cellToKey.set(tdValue,this.json[name]);tr.appendChild(tdName);tr.appendChild(tdValue);let that=this;let usingCheck=tdName.children[0];usingCheck.onchange=function(ev){defaultInputEvent.call(tdValue.children[0],ev,that)};tbody.appendChild(tr)}return container};toJSON(){const that=this;const table=that.tableContainer.querySelector("table");let getTableValue=function(table){const tbody=table.querySelector("tbody");const trs=Array.from(tbody.children);let res={};trs.forEach(function(tr,index,array){let usingChecked=tr.cells[0].children[0];let key=tr.cells[0].innerText;let value;if(!usingChecked.checked)return false;if(tr.cells[1].querySelector("table")===null){value=tr.cells[1].children[0].value??tr.cells[1].querySelector('.provider').value;value=stringToPrimary(value)}else if(tr.cells[1].querySelector("table")!==null){let table=tr.cells[1].querySelector("table");value=getTableValue(table)}res[key]=value});return res};return getTableValue(table)}onJsonChange(ev){};import(href){let linkEle=document.createElement("link");linkEle.href=href;linkEle.rel="stylesheet";linkEle.type="text/css";document.head.appendChild(linkEle)};jsonChange(ev){this.onJsonChange(ev||new JSONParserEvent({json:this.json,jsonParse:this}))}[Symbol.for("customJsonChangeEvent")](){}setDefaultStyle(){let cssText=`table{border-collapse:collapse}td{border:#639 solid 3px;padding:.5em 1em}body>section>table>thead>tr>th{border:#639 solid 3px}td:nth-child(2)>input,td:nth-child(2)>select{padding:0.5em;min-width:100px}`;let stylesheet=document.createElement("style");stylesheet.innerHTML=cssText;document.head.appendChild(stylesheet)}render(container=document.body){container.appendChild(this.initTable())};defaultInit(){this.setDefaultStyle();this.render()}set onjsonchange(func){this.onJsonChange=func}get onjsonchange(){return this.onJsonChange}};export{JSONParser,JSONParseCustomController,JSONParserEvent,JSONParseRangeController,JSONParseDateController,JSONParseTimeController,}